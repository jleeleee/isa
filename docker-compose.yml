# vim: et:ts=2:sw=2

version: '3'

services:
  models:
    image: tp33/django
    container_name: models
    network_mode: default
    external_links:
      - mysql:db
    volumes:
      - ./app-models:/app
    ports:
      - "8002:8000"
    command:
      # bash -c "/usr/bin/env python3 /app/manage.py runserver 0.0.0.0:8000"
      bash -c "python /app/manage.py migrate &&
      python /app/manage.py loaddata /app/partex/db/fixtures/users.json &&
      python /app/manage.py loaddata /app/partex/db/fixtures/listings.json &&
      python /app/manage.py loaddata /app/partex/db/fixtures/reviews.json &&
      mod_wsgi-express start-server --reload-on-changes /app/partex/wsgi.py"
      # /usr/bin/env python3 /app/manage.py runserver 0.0.0.0:8000"
  exp:
    image: tp33/django
    container_name: exp
    network_mode: default
    volumes:
      - ./app-experience:/app
    ports:
      - "8001:8000"
    links:
      - models:models
    command:
      "mod_wsgi-express start-server /app/partex/wsgi.py"
      # "/usr/bin/env python3 /app/manage.py runserver 0.0.0.0:8000"
  web:
    image: tp33/django
    container_name: web
    network_mode: default
    volumes:
      - ./app-web:/app
    ports:
      - "8000:8000"
    links:
      - exp:partex-experience
    command:
      "mod_wsgi-express start-server /app/partex/wsgi.py"
      # "/usr/bin/env python3 /app/manage.py runserver 0.0.0.0:8000"
  kafka:
    image: spotify/kafka
    container_name: kafka
    environment:
       ADVERTISED_HOST: kafka
       ADVERTISED_PORT: 9092
    hostname: kafka

  es:
    image: elasticsearch:2.0
    container_name: es
    ports:
      - "9200:9200"

  batch:
    image: tp33/django
    container_name: batch
    links:
      - kafka:kafka
      - es:es
        #command: python batch.py
